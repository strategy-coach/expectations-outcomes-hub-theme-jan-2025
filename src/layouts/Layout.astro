---
import Header from "./Header.astro";
import Footer from "./Footer.astro";
import themeConfig from '../../theme.config';

const { baseHyperLinkColor } = themeConfig  || {}; 

const enableOpenObserve =
  import.meta.env.ENABLE_OPEN_OBSERVE !== undefined
    ? import.meta.env.ENABLE_OPEN_OBSERVE
    : false;
---

<!doctype html>
<html lang="en" style={`--hyperlink-color: ${baseHyperLinkColor || '#007BFF'}`}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/assets/images/favicon.svg" />
    <link rel="stylesheet" href="/assets/styles/tailwind.min.css" />
    <link rel="stylesheet" href="/assets/styles/basic.css" />
    <link rel="stylesheet" href="/assets/styles/custom.css" />
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/flowbite/2.0.0/flowbite.min.css"
      rel="stylesheet"
    />
    <link href="/htmloutput/pagefind/pagefind-ui.css" rel="stylesheet">
    <script src="/htmloutput/pagefind/pagefind-ui.js" is:inline></script>
    <script
      src="https://cdn.jsdelivr.net/npm/flowbite@2.5.2/dist/flowbite.min.js"
    ></script>

    {
      enableOpenObserve == "true" && (
        <>
          <script type="module" crossorigin src="/assets/scripts/index.28871fbc.js"></script>
          <link rel="modulepreload" href="/assets/scripts/vendor.4c9b4c60.js" />
        </>
      )
    }
    
    <meta name="generator" content={Astro.generator} />
    <title>Expectations and Outcomes Hub Theme</title>
  </head>
  <body class="bg-gray-50">
    <Header />
    <slot />
    <Footer />
  </body>
</html>
<script is:inline>
  document.addEventListener("DOMContentLoaded", function () {
    function removeHtmlExtensionAndFolder(href) {
      return href.replace(/\/htmloutput\//, "/").replace(/\.html$/, "");
    }

    // Function to apply URL modification to links
    function updateLinks() {
      const resultLinks = document.querySelectorAll(
        ".pagefind-ui__result-link",
      );
      resultLinks.forEach((link) => {
        const originalHref = link.getAttribute("href");
        if (originalHref) {
          const newHref = removeHtmlExtensionAndFolder(originalHref);
          link.href = newHref;
        }
      });

      // Remove the class `pagefind-ui__result-thumb` from elements
      const thumbElements = document.querySelectorAll(".pagefind-ui__result-thumb");
      thumbElements.forEach((element) => {
        element.classList.remove("pagefind-ui__result-thumb");
      });
    }

    // Add a keyup event listener to update existing links
    window.addEventListener("keydown", function () {
      setTimeout(updateLinks, 1500);
    });
    window.addEventListener("keyup", function () {
      setTimeout(updateLinks, 500);
    });

    window.addEventListener("click", function () {
      setTimeout(updateLinks, 500);
    });

    // Add a click event listener to handle "Load more Results" button
  });

  window.addEventListener("keydown", (event) => {
    if (event.key === "/" || event.key === ".") {
      console.log("you pressed the slash");
      event.preventDefault();
      document.querySelector("div#search input").focus();
    }
  });
</script>

<style is:global>
  main a {
    color: var(--hyperlink-color, #007BFF); 
    text-decoration: none;
  }
  main a:hover {
    color: #000!important;
    text-decoration: none;
  }


</style>